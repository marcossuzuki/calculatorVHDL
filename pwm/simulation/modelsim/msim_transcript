# Reading C:/altera/13.0/modelsim_ase/tcl/vsim/pref.tcl 
# do pwm_run_msim_rtl_vhdl.do 
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Copying C:\altera\13.0\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# ** Warning: Copied C:\altera\13.0\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini.
#          Updated modelsim.ini.
# 
# vcom -93 -work work {C:/Users/marco/Desktop/simulacao/calculadora/pwm/pwm.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_UNSIGNED
# -- Compiling entity PWM
# -- Compiling architecture impl of PWM
# 
vsim +altera -do pwm_run_msim_rtl_vhdl.do -l msim_transcript -gui work.pwm(impl)
# vsim +altera -do pwm_run_msim_rtl_vhdl.do -l msim_transcript -gui work.pwm(impl) 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading ieee.std_logic_unsigned(body)
# Loading work.pwm(impl)
# do pwm_run_msim_rtl_vhdl.do 
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Modifying modelsim.ini
# 
# vcom -93 -work work {C:/Users/marco/Desktop/simulacao/calculadora/pwm/pwm.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading package STD_LOGIC_UNSIGNED
# -- Compiling entity PWM
# -- Compiling architecture impl of PWM
# 
add wave -position end  sim:/pwm/n
add wave -position end  sim:/pwm/CLK
add wave -position end  sim:/pwm/RST
add wave -position end  sim:/pwm/ENABLE
add wave -position end  sim:/pwm/DUTY
add wave -position end  sim:/pwm/PWM_OUT
add wave -position end  sim:/pwm/CYCLE_OFF
add wave -position end  sim:/pwm/s_PWM_OUT
add wave -position end  sim:/pwm/CONT
add wave -position end  sim:/pwm/all_ones
force -freeze sim:/pwm/CLK 1 0, 0 {50 ps} -r 100
force -freeze sim:/pwm/RST 0 0
wave create -driver freeze -pattern constant -value 0 -starttime 0ps -endtime 1000ps sim:/pwm/RST
run
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 0 ps  Iteration: 0  Instance: /pwm
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 0 ps  Iteration: 0  Instance: /pwm
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 0 ps  Iteration: 0  Instance: /pwm
force -freeze sim:/pwm/ENABLE 1 0
run
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 200 ps  Iteration: 0  Instance: /pwm
force -freeze sim:/pwm/DUTY 10000000 0
run
run
run
run
# Break key hit 
run -all
force -freeze sim:/pwm/CLK 1 0, 0 {0 ps} -r 1
restart
# Loading work.pwm(impl)
run -all
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 0 ps  Iteration: 0  Instance: /pwm
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 0 ps  Iteration: 0  Instance: /pwm
# ** Warning: There is an 'U'|'X'|'W'|'Z'|'-' in an arithmetic operand, the result will be 'X'(es).
#    Time: 0 ps  Iteration: 0  Instance: /pwm
run
force -freeze sim:/pwm/CLK 1 0, 0 {0 ps} -r 1
run
run
run
run
run
run
force -freeze sim:/pwm/CLK 1 0, 0 {1 ps} -r 100
run
run
run
run
run
run
force -freeze sim:/pwm/CLK 1 0, 0 {50 ps} -r 100
run
run
run
run
force -freeze sim:/pwm/CLK 1 0, 0 {50 ps} -r 100
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
run
force -freeze sim:/pwm/DUTY 10001000 0
run
run
run
run
run
run
run
run
run
run
run
force -freeze sim:/pwm/ENABLE 1 0
force -freeze sim:/pwm/RST 0 0
run
run
run
run
run
run
run
run
run
run
run
run
run
run
noforce sim:/pwm/CLK
force -freeze sim:/pwm/CLK 1 0, 0 {50 ps} -r 100
run
run
run
run
run
run
run
run
run
run
run
run
run
run
force -freeze sim:/pwm/CLK 1 0, 0 {0 ps} -r 1
run
run
run
force -freeze sim:/pwm/CLK 1 0, 0 {0 ps} -r 2
run
run
run
run
run
run
run
run
run
run
force -freeze sim:/pwm/CLK 1 0, 0 {50 ps} -r 100
run
run
run
noforce sim:/pwm/CLK
run
run
run
run
run
force -freeze sim:/pwm/CLK 1 0, 0 {50 ps} -r 100
run
run
run
run
run
run
run
run -all
noforce sim:/pwm/s_PWM_OUT
force -freeze sim:/pwm/DUTY 11111110 0
run
run
run
run
run
run
run
run -all
force -freeze sim:/pwm/DUTY 11011110 0
run -all
